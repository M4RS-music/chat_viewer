#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\headheight 1cm
\headsep 1cm
\footskip 1cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
ChatViewer
\end_layout

\begin_layout Author
Martin Janda
\end_layout

\begin_layout Date
Wednesday, 9 June 2021
\end_layout

\begin_layout Standard
Prague College
\end_layout

\begin_layout Standard
2101 - Java Programming 500
\end_layout

\begin_layout Standard
Viktor Černý
\end_layout

\begin_layout Standard
1931 Words
\end_layout

\begin_layout Standard
2101
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setcounter{page}{1}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Subparagraph*
The goal of this project was to create a GUI application using Java and
 Java FX that would display data stored in supplied text files as chat logs.
 The application was to use TextFlow to display the text of the chat.
 The displayed chat was supposed to replace text smileys 
\begin_inset Quotes eld
\end_inset

:(
\begin_inset Quotes eld
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

:)
\begin_inset Quotes erd
\end_inset

 as smiley images.
 The application was supposed to be able to handle chat files (text files
 with the extension 
\begin_inset Quotes eld
\end_inset

.msg
\begin_inset Quotes erd
\end_inset

) that had unexpected syntax that were also supplied along with the assignment
 prompt.
 Any errors that occured in the application were to be reported to the user
 graphically.
\end_layout

\begin_layout Section
User Documentation
\end_layout

\begin_layout Paragraph*
Once the application is open click on the 
\begin_inset Quotes eld
\end_inset

File
\begin_inset Quotes erd
\end_inset

 menu and select the 
\begin_inset Quotes eld
\end_inset

Open
\begin_inset Quotes erd
\end_inset

 item.
 This will open the file open dialog, alternatively you may input the path
 to a .msg file in the text field at the bottom of the window that contains
 the text 
\begin_inset Quotes eld
\end_inset

Absolute Path
\begin_inset Quotes erd
\end_inset

.
 After selecting your file with either method press the corresponding 
\begin_inset Quotes eld
\end_inset

Open
\begin_inset Quotes erd
\end_inset

 button and the program will load your chat file and display it.
 If you want to select a different file simply follow the same procedure
 as before.
 When you want to close the application you may either select the 
\begin_inset Quotes eld
\end_inset

Close
\begin_inset Quotes erd
\end_inset

 option from the 
\begin_inset Quotes eld
\end_inset

File
\begin_inset Quotes erd
\end_inset

 menu or simply click on the 
\begin_inset Quotes eld
\end_inset

X
\begin_inset Quotes erd
\end_inset

 button on the window frame for closing windows.
\end_layout

\begin_layout Section
Reflection
\end_layout

\begin_layout Paragraph*
This section will be written in the first person in effort to use language
 that more accurately represents reflection on the project in lieu of formal
 essay language.
 
\end_layout

\begin_layout Paragraph*
The managment of this project was handled using Github.
 The commit history for this will be in Appendix A.
 The methodologly of project managment was agile, as changes to the design
 and plan were made throughout the implementation of the project in order
 to better suit changes undertaken due to contingencies.
 Since this was an independent project most of the planning of code was
 done using comments or the class diagram.
 This is a point of confusion for me, in group project I generally stick
 rigidly to maintaining a GitHub projects page that contains a backlog,
 in progress, and completed section.
 I even created one for this project, but once I start development on a
 solo project I tend to not update these at all as I am focused on completing
 and testing code.
\end_layout

\begin_layout Paragraph*
Ideally I would have much preferred to use Canvas instead of TextFlow, seeing
 as I already know Canvas and I couldn't find any substantial tutorials
 or doccumentation of TextFlow that related to my situation.
 I originally planned to animate text bubbles and try to replicate the user
 experience of something like Apples iMessage or simmilar apps.
 This would have also enabled me to implement the conversion of the strings
 
\begin_inset Quotes eld
\end_inset

:(
\begin_inset Quotes eld
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

:)
\begin_inset Quotes eld
\end_inset

 into photos.
 I could not find doccumentation that explained how to display images inside
 a TextFlow.
 I tried adding an ImageView that I created when the Text being added contained
 one of the strings but I couldn't get it to display.
 The chatviewer is capable of opening and properly displaying 
\begin_inset Quotes eld
\end_inset

.msg
\begin_inset Quotes erd
\end_inset

 files with errors in syntax due to the way the file is loaded.
 Efforts were made to add alerts for the user that would inform them of
 
\begin_inset Quotes eld
\end_inset

.msg
\begin_inset Quotes erd
\end_inset

 files that had bad syntax.
 However these broke the code and since I was lacking time I opted to modify
 the code so that all the supplied wrong syntax examples would simply be
 accounted for and displayed correctly.
 Evidence of all these efforts are visible in the code and most are commented
 out.
 It's not like I just ignored the implementation of these features, I just
 genuinely could not get them to work even with the help of StackExchange
 and docummentation.
\end_layout

\end_body
\end_document
